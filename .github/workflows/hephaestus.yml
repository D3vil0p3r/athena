name: Hephaestus
on:
  pull_request_target:
    types: [opened, reopened, edited, synchronize, ready_for_review]
    paths:
      - 'packages/**/PKGBUILD'

jobs:
   validate-and-build:
    name: Build Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR Head
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0  # Fetch all history so we can access the target branch

      - name: Label PR if PKGBUILD file is involved
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: '1.has: package'

      - name: Directory validation
        id: dir_validation
        run: |
          # Find all PKGBUILD files involved in the PR
          PKGBUILD_PATHS=$(git diff --name-only --diff-filter=ACMRT origin/main...${{ github.event.pull_request.head.sha }} | grep 'PKGBUILD')

          # Iterate over each PKGBUILD file and validate its directory
          for PKGBUILD_PATH in $PKGBUILD_PATHS; do
            TOOL_NAME=$(basename $(dirname $PKGBUILD_PATH))

            # Set the expected directory based on the TOOL_NAME prefix
            if [[ $TOOL_NAME == python* ]]; then
              EXPECTED_DIR="packages/libs/python"
            elif [[ $TOOL_NAME == perl* ]]; then
              EXPECTED_DIR="packages/libs/perl"
            elif [[ $TOOL_NAME == ruby* ]]; then
              EXPECTED_DIR="packages/libs/ruby"
            else
              EXPECTED_DIR="packages/pentesting"
            fi

            # Check if the PKGBUILD file is in the expected directory
            if [[ ! $PKGBUILD_PATH =~ $EXPECTED_DIR ]]; then
              echo "Error: $TOOL_NAME should be in $EXPECTED_DIR but found in $(dirname $PKGBUILD_PATH)."
              exit 1
            fi
          done

      - name: Run Podman Container to Build PKGBUILD
        run: |
          PKGBUILD_PATHS=$(git diff --name-only --diff-filter=ACMRT origin/main...${{ github.event.pull_request.head.sha }} | grep 'PKGBUILD')
          for PKGBUILD_PATH in $PKGBUILD_PATHS; do
              PARENT_DIR=$(dirname "$PKGBUILD_PATH")
              podman run --rm -v "$PWD/$PARENT_DIR:/build/sandbox" -w /build/sandbox --userns=keep-id docker.io/athenaos/hephaestus -t
          done
